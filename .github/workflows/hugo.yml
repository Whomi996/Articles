name: Deploy Hugo site to Pages

on:
  workflow_dispatch:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.125.7/hugo_extended_0.125.7_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install theme and setup assets
        run: |
          # 删除已存在的主题目录（如果存在）
          rm -rf themes/PaperMod
          
          # 安装主题
          git clone --depth 1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
          
          # 创建必要的目录
          mkdir -p assets/css/extended
          mkdir -p layouts/partials
          mkdir -p layouts/_default/_markup
          mkdir -p static/fonts
          mkdir -p static/images
          mkdir -p content/posts
          mkdir -p content/search
          
          # 下载并安装字体（直接从GitHub仓库下载，添加重试逻辑）
          download_with_retry() {
            local url=$1
            local output=$2
            local max_attempts=3
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Downloading $output (Attempt $attempt of $max_attempts)"
              if wget --timeout=30 --tries=3 -O "$output" "$url"; then
                return 0
              fi
              attempt=$((attempt + 1))
              sleep 5
            done
            return 1
          }
          
          # 下载思源宋体
          if ! download_with_retry \
            "https://github.com/adobe-fonts/source-han-serif/raw/release/OTF/SimplifiedChinese/SourceHanSerifSC-Regular.otf" \
            "static/fonts/SourceHanSerifCN-Regular.otf"; then
            echo "Failed to download Source Han Serif font"
            exit 1
          fi
          
          # 下载霞鹜文楷
          if ! download_with_retry \
            "https://github.com/lxgw/LxgwWenKai-Lite/releases/download/v1.311/LXGWWenKaiLite-Regular.ttf" \
            "static/fonts/lxgwwenkaiscreen.ttf"; then
            echo "Failed to download LXGW WenKai font"
            exit 1
          fi
          
          # 创建自定义样式文件
          cat > assets/css/extended/custom-style.css <<EOL
          /* 自定义字体 */
          @font-face {
            font-family: "Source Han Serif CN";
            src: url("/Articles/fonts/SourceHanSerifCN-Regular.otf") format("opentype");
            font-display: swap;
          }
          
          @font-face {
            font-family: "LXGW WenKai";
            src: url("/Articles/fonts/lxgwwenkaiscreen.ttf") format("truetype");
            font-display: swap;
          }
          
          /* 全局字体设置 */
          body {
            font-family: system-ui, -apple-system, "LXGW WenKai", sans-serif;
          }
          
          .post-title {
            font-family: "Source Han Serif CN", serif;
          }
          
          /* 布局和主题变量 */
          :root {
            --main-width: 1200px;
            --article-width: 800px;
            --toc-width: 200px;
            --gap: 24px;
            --radius: 8px;
          }
          
          /* 响应式布局 */
          @media screen and (max-width: 1400px) {
            :root {
              --main-width: 95vw;
              --article-width: 100%;
              --toc-width: 220px;
            }
          }
          
          @media screen and (max-width: 768px) {
            :root {
              --gap: 16px;
            }
            
            .toc {
              display: none;
            }
            
            .post-single {
              margin: 0;
              padding: var(--gap);
            }
          }
          
          /* 文章内容样式 */
          .post-single {
            max-width: var(--article-width);
            margin: 0 auto;
            padding: var(--gap);
          }
          
          .post-content {
            font-size: 1.1rem;
            line-height: 1.8;
          }
          
          /* 代码块样式 */
          .post-content pre {
            padding: 1rem;
            border-radius: var(--radius);
            overflow-x: auto;
          }
          
          .post-content code {
            font-family: "Fira Code", monospace;
          }
          EOL
          
          # 创建图片处理模板
          cat > layouts/_default/_markup/render-image.html <<EOL
          <figure class="zoom-img">
            <img src="{{ .Destination | safeURL }}" alt="{{ .Text }}" loading="lazy">
            {{ with .Title }}<figcaption>{{ . }}</figcaption>{{ end }}
          </figure>
          EOL

      - name: Create Hugo config
        run: |
          cat > config.yml <<EOL
          baseURL: 'https://whomi996.github.io/Articles/'
          languageCode: zh-cn
          title: Articles
          theme: PaperMod
          
          enableGitInfo: true
          enableRobotsTXT: true
          
          paginate: 10
          
          outputs:
            home:
              - HTML
              - RSS
              - JSON
          
          params:
            env: production
            defaultTheme: auto
            ShowReadingTime: true
            ShowShareButtons: true
            ShowPostNavLinks: true
            ShowBreadCrumbs: true
            ShowCodeCopyButtons: true
            ShowWordCount: true
            ShowRssButtonInSectionTermList: true
            ShowLastMod: true
            ShowToc: true
            TocOpen: true
            
            profileMode:
              enabled: true
              title: "学习笔记 📚"
              subtitle: "记录学习过程中的思考与收获"
              imageUrl: "https://api.dicebear.com/7.x/bottts/svg?seed=felix"
              imageTitle: "Avatar"
              imageWidth: 120
              imageHeight: 120
              buttons:
                - name: 文章
                  url: "/Articles/posts"
                - name: 分类
                  url: "/Articles/categories"
                - name: 标签
                  url: "/Articles/tags"
              
            socialIcons:
              - name: github
                url: "https://github.com/whomi996"
                
            assets:
              disableHLJS: true
              favicon: "/favicon.ico"
              
            cover:
              responsiveImages: true
              linkFullImages: true
              
          menu:
            main:
              - identifier: posts
                name: 文章
                url: /posts/
                weight: 10
              - identifier: categories
                name: 分类
                url: /categories/
                weight: 20
              - identifier: tags
                name: 标签
                url: /tags/
                weight: 30
              - identifier: archives
                name: 归档
                url: /archives/
                weight: 40
              - identifier: search
                name: 搜索
                url: /search/
                weight: 50
                
          markup:
            highlight:
              noClasses: false
              codeFences: true
              guessSyntax: true
              lineNos: true
              style: monokai
              
            goldmark:
              renderer:
                unsafe: true
            tableOfContents:
              endLevel: 4
              ordered: false
              startLevel: 2
          EOL

          # 创建必要的页面
          cat > content/archives.md <<EOL
          ---
          title: "归档"
          layout: "archives"
          url: "/archives"
          summary: "archives"
          ---
          EOL
          
          cat > content/search.md <<EOL
          ---
          title: "搜索"
          layout: "search"
          ---
          EOL

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --minify --gc

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

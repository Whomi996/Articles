name: Deploy Hugo site to Pages

on:
  workflow_dispatch:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v0.125.7/hugo_extended_0.125.7_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install theme
        run: git clone --depth 1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

      - name: Create Hugo config
        run: |
          cat > config.yml <<EOL
          baseURL: 'https://whomi996.github.io/Articles/'
          languageCode: zh-cn
          title: Articles
          theme: PaperMod
          
          enableRobotsTXT: true
          buildDrafts: false
          buildFuture: false
          buildExpired: false
          
          minify:
            disableXML: true
            minifyOutput: true
            
          params:
            env: production
            title: Articles
            description: "个人文章收集"
            keywords: [Blog, Portfolio, Articles]
            author: whomi996
            DateFormat: "2006-01-02"
            defaultTheme: auto
            ShowReadingTime: true
            ShowShareButtons: true
            ShowPostNavLinks: true
            ShowBreadCrumbs: true
            ShowCodeCopyButtons: true
            ShowWordCount: true
            ShowRssButtonInSectionTermList: true
            UseHugoToc: true
            disableSpecial1stPost: false
            disableScrollToTop: false
            comments: false
            hidemeta: false
            hideSummary: false
            showtoc: true
            tocopen: false
            
            assets:
              disableHLJS: true
              favicon: "<link / abs url>"
              favicon16x16: "<link / abs url>"
              favicon32x32: "<link / abs url>"
              apple_touch_icon: "<link / abs url>"
              safari_pinned_tab: "<link / abs url>"
              
            label:
              text: "Home"
              iconHeight: 35
              
            profileMode:
              enabled: false
              title: Articles
              imageUrl: "#"
              imageTitle: my image
              
            homeInfoParams:
              Title: "Hi there 👋"
              Content: Welcome to my blog
              
            socialIcons:
              - name: github
                url: "https://github.com/whomi996"
                
            cover:
              hidden: false
              hiddenInList: false
              hiddenInSingle: false
              
            editPost:
              URL: "https://github.com/whomi996/Articles/content"
              Text: "Suggest Changes"
              appendFilePath: true
            
          menu:
            main:
              - identifier: archives
                name: 归档
                url: /archives/
                weight: 10
              - identifier: categories
                name: 分类
                url: /categories/
                weight: 20
              - identifier: tags
                name: 标签
                url: /tags/
                weight: 30
              - identifier: search
                name: 搜索
                url: /search/
                weight: 40
                
          # for search
          outputs:
            home:
              - HTML
              - RSS
              - JSON
              
          markup:
            highlight:
              noClasses: false
              anchorLineNos: true
              codeFences: true
              guessSyntax: true
              lineNos: true
              style: monokai
          EOL

      - name: Setup content structure
        run: |
          mkdir -p content/posts
          mkdir -p content/search
          mkdir -p static/images
          
          # 处理 Markdown 文件并下载图片
          find . -name "*.md" -not -path "./themes/*" -not -path "./archetypes/*" -not -path "./content/*" | while read file; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              if [ "$filename" = "README.md" ]; then
                continue
              fi
              
              dir_path=$(dirname "$file")
              category=$(basename "$dir_path")
              
              if [ "$dir_path" = "." ]; then
                target="content/posts/$filename"
                category="未分类"
              else
                target="content/posts/${category}/$filename"
                mkdir -p "content/posts/${category}"
              fi
              
              # 创建图片存储目录
              img_dir="static/images/${category}"
              mkdir -p "$img_dir"
              
              # 创建临时文件处理图片链接
              temp_file=$(mktemp)
              
              # 如果没有 front matter，添加它
              if ! grep -q "^---" "$file"; then
                echo "---" > "$temp_file"
                echo "title: \"$(basename "$file" .md)\"" >> "$temp_file"
                echo "date: $(git log -1 --format=%aI -- "$file")" >> "$temp_file"
                echo "draft: false" >> "$temp_file"
                echo "categories: [\"$category\"]" >> "$temp_file"
                case "$category" in
                  "github")
                    echo "tags: [\"GitHub\", \"工作流\"]" >> "$temp_file"
                    ;;
                  "从0开始做增长")
                    echo "tags: [\"增长\", \"营销\", \"学习笔记\"]" >> "$temp_file"
                    ;;
                  "AI大模型实战端手课")
                    echo "tags: [\"AI\", \"大模型\", \"实战\"]" >> "$temp_file"
                    ;;
                  *)
                    echo "tags: []" >> "$temp_file"
                    ;;
                esac
                echo "---" >> "$temp_file"
              fi
              
              # 处理文件内容，下载图片并更新链接
              while IFS= read -r line; do
                if echo "$line" | grep -q '!\[.*\](http'; then
                  # 提取图片URL和替代文本
                  img_url=$(echo "$line" | sed -n 's/.*\](\([^)]*\)).*/\1/p')
                  img_alt=$(echo "$line" | sed -n 's/!\[\([^]]*\)\].*/\1/p')
                  
                  # 生成唯一的图片文件名
                  img_filename=$(echo "$img_url" | md5sum | cut -d' ' -f1)
                  img_ext=$(echo "$img_url" | sed -n 's/.*\.\([^.?]*\).*/\1/p')
                  if [ -z "$img_ext" ]; then
                    img_ext="png"
                  fi
                  
                  # 下载图片
                  wget -q "$img_url" -O "$img_dir/${img_filename}.${img_ext}" || true
                  
                  # 更新图片链接
                  echo "![${img_alt}](/Articles/images/${category}/${img_filename}.${img_ext})" >> "$temp_file"
                else
                  echo "$line" >> "$temp_file"
                fi
              done < "$file"
              
              mv "$temp_file" "$target"
            fi
          done

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
